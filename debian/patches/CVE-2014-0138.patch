Description: fix wrong re-use of connections
Origin: backport, https://github.com/bagder/curl/commit/378af08c99299683eb728fd8f9d3d3ab05f73ec0
Origin: backport, https://github.com/bagder/curl/commit/d765099813f58153cb859279c743e6494d179341
Origin: backport, https://github.com/bagder/curl/commit/517b06d657aceb11a234b05cc891170c367ab80d
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=742728

WARNING: this patch contains weird line endings, editing it may
break tests.

Index: curl-7.22.0/lib/http.c
===================================================================
--- curl-7.22.0.orig/lib/http.c	2014-04-01 17:01:12.442380755 -0400
+++ curl-7.22.0/lib/http.c	2014-04-01 17:01:12.434380755 -0400
@@ -146,7 +146,7 @@
   ZERO_NULL,                            /* readwrite */
   PORT_HTTPS,                           /* defport */
   CURLPROTO_HTTP | CURLPROTO_HTTPS,     /* protocol */
-  PROTOPT_SSL                           /* flags */
+  PROTOPT_SSL | PROTOPT_CREDSPERREQUEST /* flags */
 };
 #endif
 
Index: curl-7.22.0/lib/url.c
===================================================================
--- curl-7.22.0.orig/lib/url.c	2014-04-01 17:01:12.442380755 -0400
+++ curl-7.22.0/lib/url.c	2014-04-01 17:01:12.434380755 -0400
@@ -2824,6 +2824,9 @@
   long i;
   struct connectdata *check;
   bool canPipeline = IsPipeliningPossible(data, needle);
+  bool wantNTLMhttp = ((data->state.authhost.want & CURLAUTH_NTLM) ||
+                       (data->state.authhost.want & CURLAUTH_NTLM_WB)) &&
+    (needle->handler->protocol & CURLPROTO_HTTP) ? TRUE : FALSE;
 
   for(i=0; i< data->state.connc->num; i++) {
     bool match = FALSE;
@@ -2992,12 +2995,10 @@
             continue;
           }
         }
-        if((needle->handler->protocol & CURLPROTO_FTP) ||
-           ((needle->handler->protocol & CURLPROTO_HTTP) &&
-            ((data->state.authhost.want & CURLAUTH_NTLM) ||
-             (data->state.authhost.want & CURLAUTH_NTLM_WB)))) {
-          /* This is FTP or HTTP+NTLM, verify that we're using the same name
-             and password as well */
+        if((!(needle->handler->flags & PROTOPT_CREDSPERREQUEST)) ||
+           wantNTLMhttp) {
+          /* This protocol requires credentials per connection or is HTTP+NTLM,
+             so verify that we're using the same name and password as well */
           if(!strequal(needle->user, check->user) ||
              !strequal(needle->passwd, check->passwd)) {
             /* one of them was different */
Index: curl-7.22.0/lib/urldata.h
===================================================================
--- curl-7.22.0.orig/lib/urldata.h	2014-04-01 17:01:12.442380755 -0400
+++ curl-7.22.0/lib/urldata.h	2014-04-01 17:01:12.438380755 -0400
@@ -707,6 +707,9 @@
 #define PROTOPT_NEEDSPWD (1<<5)    /* needs a password, and if none is set it
                                       gets a default */
 
+#define PROTOPT_CREDSPERREQUEST (1<<7) /* requires login creditials per request
+                                          as opposed to per connection */
+
 
 /* return the count of bytes sent, or -1 on error */
 typedef ssize_t (Curl_send)(struct connectdata *conn, /* connection data */
Index: curl-7.22.0/tests/data/Makefile.am
===================================================================
--- curl-7.22.0.orig/tests/data/Makefile.am	2014-04-01 17:01:12.442380755 -0400
+++ curl-7.22.0/tests/data/Makefile.am	2014-04-01 17:01:12.438380755 -0400
@@ -75,6 +75,7 @@
 test1126 test1127 test1128 test1129 test1130 test1131 test1200 test1201	\
 test1202 test1203 test1300 test1301 test1302 test1303 test1304 test1305	\
 test1306 test1307 test1308 test1309 test1310 test1311 test1312 test1313 \
+test1418 test1419 \
 test2000 test2001 test2002 test2003 test2004 test1396
 
 EXTRA_DIST = $(TESTCASES) DISABLED
Index: curl-7.22.0/tests/data/test1418
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ curl-7.22.0/tests/data/test1418	2014-04-01 17:01:24.366381074 -0400
@@ -0,0 +1,106 @@
+<testcase>
+<info>
+<keywords>
+HTTP
+HTTP GET
+HTTP NTLM auth
+connection re-use
+</keywords>
+</info>
+# Server-side
+<reply>
+<servercmd>
+connection-monitor
+</servercmd>
+
+<data>
+HTTP/1.1 401 Authentication please!
+Content-Length: 20
+WWW-Authenticate: Digest realm="loonie", nonce="314156592"
+WWW-Authenticate: Basic
+
+Please auth with me
+</data>
+
+# This is supposed to be returned when the server gets the second
+# Authorization: NTLM line passed-in from the client
+<data1000>
+HTTP/1.1 200 Things are fine in server land
+Server: Microsoft-IIS/5.0
+Content-Length: 4
+
+moo
+</data1000>
+
+<data1003>
+HTTP/1.1 200 OK
+Server: Another one/1.0
+Content-Length: 4
+
+boo
+</data1003>
+
+# This is the first reply after the redirection
+<data1011>
+HTTP/1.1 200 OK
+Server: Microsoft-IIS/5.0
+Content-Type: text/html; charset=iso-8859-1
+Content-Length: 34
+
+This is not the real page either!
+</data1011>
+
+<datacheck>
+HTTP/1.1 401 Authentication please!
+Content-Length: 20
+WWW-Authenticate: Digest realm="loonie", nonce="314156592"
+WWW-Authenticate: Basic
+
+HTTP/1.1 200 Things are fine in server land
+Server: Microsoft-IIS/5.0
+Content-Length: 4
+
+moo
+</datacheck>
+
+</reply>
+
+# Client-side
+<client>
+<server>
+http
+</server>
+<features>
+crypto
+</features>
+ <name>
+HTTP with --anyauth and connection re-use
+ </name>
+ <command>
+http://%HOSTIP:%HTTPPORT/1418 -u testuser:testpass --anyauth http://%HOSTIP:%HTTPPORT/14180003
+</command>
+</client>
+
+# Verify data after the test has been "shot"
+<verify>
+<strip>
+^User-Agent:.*
+</strip>
+<protocol>
+GET /1418 HTTP/1.1
+Host: %HOSTIP:%HTTPPORT
+Accept: */*
+
+GET /1418 HTTP/1.1
+Authorization: Digest username="testuser", realm="loonie", nonce="314156592", uri="/1418", response="986238b7e0077754944c966f56d9bc77"
+Host: %HOSTIP:%HTTPPORT
+Accept: */*
+
+GET /14180003 HTTP/1.1
+Authorization: Digest username="testuser", realm="loonie", nonce="314156592", uri="/14180003", response="1c6390a67bac3283a9b023402f3b3540"
+Host: %HOSTIP:%HTTPPORT
+Accept: */*
+
+</protocol>
+</verify>
+</testcase>
Index: curl-7.22.0/tests/data/test1419
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ curl-7.22.0/tests/data/test1419	2014-04-01 17:01:32.534381293 -0400
@@ -0,0 +1,68 @@
+<testcase>
+<info>
+<keywords>
+HTTP
+HTTP GET
+HTTP NTLM auth
+connection re-use
+</keywords>
+</info>
+# Server-side
+<reply>
+<servercmd>
+connection-monitor
+</servercmd>
+
+<data>
+HTTP/1.1 200 fine!
+Content-Length: 20
+
+Feel free to get it
+</data>
+
+<data3>
+HTTP/1.1 200 OK
+Server: Another one/1.0
+Content-Length: 4
+
+boo
+</data3>
+
+<datacheck>
+HTTP/1.1 200 fine!
+Content-Length: 20
+
+Feel free to get it
+</datacheck>
+</reply>
+
+# Client-side
+<client>
+<server>
+http
+</server>
+ <name>
+HTTP with --anyauth (but no auth!) and connection re-use
+ </name>
+ <command>
+http://%HOSTIP:%HTTPPORT/1419 --anyauth http://%HOSTIP:%HTTPPORT/14190003
+</command>
+</client>
+
+# Verify data after the test has been "shot"
+<verify>
+<strip>
+^User-Agent:.*
+</strip>
+<protocol>
+GET /1419 HTTP/1.1
+Host: %HOSTIP:%HTTPPORT
+Accept: */*
+
+GET /14190003 HTTP/1.1
+Host: %HOSTIP:%HTTPPORT
+Accept: */*
+
+</protocol>
+</verify>
+</testcase>
